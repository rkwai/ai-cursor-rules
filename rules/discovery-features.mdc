---
description: "Discovery - Map user flows and ensure a good user experience."
globs: docs/discovery/features/*
alwaysApply: false
---
# Features and User Flows

**Key artifact to produce/update:** [features.md](mdc:docs/discovery/features.md)

Fully understand [business-model.md](mdc:docs/strategy/business-model.md), [segment.md](mdc:docs/strategy/segment.md), [kpis.md](mdc:docs/strategy/kpis.md), [prd.md](mdc:docs/discovery/prd.md) and [domains.md](mdc:docs/discovery/domains.md).

Pay extra attention to the [prd.md](mdc:docs/discovery/prd.md) and [domains.md](mdc:docs/discovery/domains.md) before filling out the template for each of the features.  Create the feature docs in `/docs/discovery/features`.

# <Feature Name>  <!-- ver:YYYY-MM-DD -->

> **Goal:** Detail the WHAT & WHY of this feature so designers and engineers can craft Press-Release/FAQ drafts and map domains.  
> Follow good-strategy practice (value + KPI link) and agile user-story mapping

---

## 1 路 User Value  
In one sentence, describe the benefit or pain relief this feature provides to the target persona or segment.  
*Tip:* Pull exact pain/gain wording from `market_user_segment.md`.

---

## 2 路 Business KPI Alignment  
Reference the Balanced-Scorecard KPI(s) this feature moves.  
| Perspective | KPI | Target Change | Rationale |
|-------------|-----|---------------|-----------|
| Customer | e.g., Activation % | +8 pp | Enables 1-click onboarding |

---

## 3 路 Core Business Domain  
Name the Domain-Driven Design bounded context this feature lives in (or creates).  
*Example:* **Observability**, **Billing**

### External Services  
List 3rd-party APIs, SAAS, or internal microservices the feature will call.  
*Keep names only; detailed contracts live elsewhere.*

### Domain Dependencies

---

## 4 路 Capability Stories (High-Level)  
Describe the minimal set of capabilities that express the feature.  


