---
description: "Discovery - Map user flows and ensure a good user experience."
globs: docs/discovery/domains.md
alwaysApply: false
---

# Business Domain Definition

Fully understand the [prd.md](mdc:docs/discovery/prd.md) before working with engineering to create the details of the necessary domains in [domains.md](mdc:docs/execution/domains.md).  These are self-contained backend services that owns a specific business capability behind clear, stable contracts.

- **State the domainâ€™s purpose:** Summarize the business problem it solves and why it should live in its own service.
- **Draw domain boundaries:** List behaviours & data _inside_ versus _outside_ the domain to prevent responsibility creep.
- **Publish the contract:** Outline REST/GraphQL endpoints _and/or_ domain events with request / response / error shapes.
- **Model core entities & rules:** Describe aggregates, value objects, and invariants that must never be violated.
- **Plan data persistence:** Specify storage tech, schema, indexing, retention, and backup needs aligned with usage patterns.
- **Map cross-domain interactions:** Note upstream/downstream services, event subscriptions, idempotency, and saga/transaction patterns.
- **Capture non-functionals:** Record targets for latency, throughput, scalability, security, compliance, logging, tracing, and alerting.
- **Versioning & migrations:** Explain how breaking changes and data migrations will be handled safely.
- **Define ownership & SLAs:** Name the owning team plus uptime, latency, and support commitments.
- **Readiness checklist:** Include gates for code review, automated tests, CI/CD pipeline, and consumer-package documentation before integration.
